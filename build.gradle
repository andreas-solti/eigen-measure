group 'de.solti.andreas'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    flatDir {
        dirs 'lib/plugins'
    }
}


dependencies {
    // https://mvnrepository.com/artifact/io.github.andreas-solti.xeslite/xeslite
    compile group: 'io.github.andreas-solti.xeslite', name: 'xeslite', version: '0.0.1'
    compile 'dk.brics:automaton:1.12-1'
    //compile fileTree(dir: 'lib', include: 'dk.brics.automaton.jar')

    // Apache Commons:
    // https://mvnrepository.com/artifact/org.apache.commons/commons-math3
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-math3
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'

    // https://mvnrepository.com/artifact/org.jbpt/jbpt-bp
    //compile group: 'org.jbpt', name: 'jbpt-bp', version: '0.3.1'


    // https://mvnrepository.com/artifact/jgraph/jgraph
    compile group: 'jgraph', name: 'jgraph', version: '5.13.0.0'
    // https://mvnrepository.com/artifact/net.sf.trove4j/trove4j
    compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
    // https://mvnrepository.com/artifact/org.simpleframework/simple-xml
    compile group: 'org.simpleframework', name: 'simple-xml', version: '2.7.1'

    compile group: 'io.github.andreas-solti.matrix-toolkits-java', name:'mtj', version:'1.0.8'

    compile fileTree(dir: 'lib/plugins', include: '*.jar', exclude: 'Cobefra.jar')
    // Make sure that CobeFra is imported last!
    compile fileTree(dir: 'lib/plugins', include: 'Cobefra.jar')

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile fileTree(dir: 'src/main/java', include: '*.java')
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'org.processmining.eigenvalue.Utils'
    }
    baseName = 'all-in-one-jar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task testJar(type: Jar) {
    classifier = 'tests'
    from sourceSets.test.output.classesDirs
}